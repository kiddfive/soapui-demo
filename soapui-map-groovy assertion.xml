<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="88eff0df-422b-4695-b27b-fa75b3dc5c3a" activeEnvironment="Default" name="maps.googleapis" resourceRoot="" soapui-version="5.1.2" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="84ff38c0-28e7-45ef-a83c-f1c41f2b33ce" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://maps.googleapis.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://maps.googleapis.com</con:endpoint></con:endpoints><con:resource name="Xml" path="/maps/api/geocode/json" id="882e54a3-ff5b-4296-a59b-9aefdbe8231e"><con:settings/><con:parameters><con:parameter><con:name>address</con:name><con:value>1600 Amphitheatre Parkway, Mountain View, CA</con:value><con:style>QUERY</con:style><con:default>1600 Amphitheatre Parkway, Mountain View, CA</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sensor</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Xml" id="f38e8bc4-904f-45db-adf2-abf2dbea027f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>GeocodeResponse</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://maps.googleapis.com/maps/api/geocode/xml">ns:Response</con:element></con:representation><con:request name="Request 1" id="850ddf10-fdd0-48b1-af5f-fb355ca0097b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://maps.googleapis.com</con:endpoint><con:request/><con:originalUri>http://maps.googleapis.com/maps/api/geocode/xml</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="159162d7-686a-49d5-b778-299832d81f14" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://api.openweathermap.org" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://api.openweathermap.org</con:endpoint></con:endpoints><con:resource name="Weather" path="/data/2.5/weather" id="4adcc780-d8f4-48b0-89b1-346d211e839f"><con:settings/><con:parameters><con:parameter><con:name>q</con:name><con:value>London,uk</con:value><con:style>QUERY</con:style><con:default>London,uk</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Weather" id="537b7acf-a60f-4ff4-b6b2-d28de647507f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:weat="http://api.openweathermap.org/data/2.5/weather">weat:Response</con:element></con:representation><con:request name="Request 1" id="16a56abd-465b-4801-b193-88da84eca220" mediaType="application/json"><con:settings/><con:endpoint>http://api.openweathermap.org</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>q</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="d89a5567-ce50-41f0-885c-42e962e2884b" name="Test suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="86ec2fd4-e22f-4809-aaa8-a966c484f0f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC1 - request one - Google Map" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Map request" id="b55d1464-5ab5-48f6-bcca-3d8693d33ab6"><con:settings/><con:config service="http://maps.googleapis.com" resourcePath="/maps/api/geocode/json" methodName="Xml" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Json request" id="850ddf10-fdd0-48b1-af5f-fb355ca0097b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>http://maps.googleapis.com</con:endpoint><con:request/><con:originalUri>http://maps.googleapis.com/maps/api/geocode/xml</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8d08e4f4-b153-474d-9288-32cf75a87dc7" name="Check returned long_name"><con:configuration><scriptText>/**
 * Author: Ivan Luo
 * Version: 1.0 for SOAPUI automation test
 */

import groovy.json.JsonSlurper 
def project = messageExchange.modelItem.testStep.testCase.testSuite.project
def response = messageExchange.response.responseContent
def slurper = new JsonSlurper()
def json = slurper.parseText response
//log.info  json

//step01: check return  data size
//log.info  json["results"].address_components.size()
expected_size = context.expand('${#Project#size}')
assert json["results"].address_components.size()==1

//step02: check return data contains long_name
//get long_name  from project level property
expected_long_name = context.expand('${#Project#city}')
actual_long_name = json["results"].address_components[0][0].long_name
//log.info expected_long_name +"????"+actual_long_name
assert expected_long_name == actual_long_name</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="babd8d26-081f-4a8a-b124-28a572948264" name="Check HTTP code"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="sensor" value="{#Project#sensor}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dedc729e-8420-4cda-a086-f7974f133175" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC2 - request two - Current Weather" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Weather request" id="c2223013-2045-45b7-823e-62ace6a5dd6e"><con:settings/><con:config service="http://api.openweathermap.org" resourcePath="/data/2.5/weather" methodName="Weather" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Weather - Request 1" id="16a56abd-465b-4801-b193-88da84eca220" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://api.openweathermap.org</con:endpoint><con:request/><con:originalUri>http://api.openweathermap.org/data/2.5/weather</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1cda22cf-b9d1-4a90-a848-786d76e7f499" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="0c81e901-c94a-4cf6-9574-8fca6d6ba0da" name="Script Assertion"><con:configuration><scriptText>/**
 * Author: Ivan Luo
 * Version: 1.0 for SOAPUI automation test
 */

import groovy.json.JsonSlurper 
def project = messageExchange.modelItem.testStep.testCase.testSuite.project
def response = messageExchange.response.responseContent
def slurper = new JsonSlurper()
def json = slurper.parseText response
//log.info  json

//step01: check return  data size
//log.info json.weather.size()
assert json.weather.size()==1

//step02: check country code
//log.info json.sys.country
assert json.sys.country=="GB"</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>q</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>city</con:name><con:value>1600</con:value></con:property><con:property><con:name>size</con:name><con:value>1</con:value></con:property><con:property><con:name>sensor</con:name><con:value>true</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>